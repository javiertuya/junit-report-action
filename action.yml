# action.yml
name: 'Junit Report Action for Java and .NET'
description: 'Generates junit html style reports from surefire test results and .NET .trx test results'
author: "Javier Tuya"
branding:
  icon: file-text
  color: blue
inputs:
  report-title:
    description: 'The title of the test report'
    required: false
    default: 'Unit Test Results'
  surefire-files:
    description: 'Specification of the surefire test report files (can use * and  ** wildcards'
    required: false
    default: '**/target/surefire-reports/TEST-*.xml'
  report-dir:
    description: 'Directory where the resulting junit html reports will be generated'
    required: false
    default: 'target/site'
  net-trx-report:
    description: 'Specifies one or more result files (`.trx`) that
      will be splitted into a set of `TEST-*.xml` files in the folder `net-surefire-folder`
      Multiple files are separated by comma'
    required: false
    default: ''
  net-surefire-folder:
    description: 'Only if `net-trx-report` is specified: folder where the splitted test report files will be stored'
    required: false
    default: 'target/surefire-reports'
runs:
  using: "composite"
  steps:
    - if: ${{ inputs.net-trx-report != '' }}
      shell: bash
      run: |
        dotnet tool install --global DotnetTestSplit
        # process each file if separated by comma
        IFS=\, read -a fields <<<"${{ inputs.net-trx-report }}"
        for TRX in "${fields[@]}" ;do
          echo "--- Split file: $TRX"
          DotnetTestSplit $TRX ${{ inputs.net-surefire-folder }}
        done
        echo "--- Splitted files at ${{ inputs.net-surefire-folder }}:"
        ls -la ${{ inputs.net-surefire-folder }}

    - shell: bash
      run: |
        echo "<project name=\"aggregate-junit-reports\" default=\"aggregate\" >"        > junit-reports-ant.xml
        echo "<target name=\"aggregate\" >"                                             >> junit-reports-ant.xml
        echo "<junitreport>"                                                            >> junit-reports-ant.xml
        echo "<fileset dir=\".\"><include name=\"${{ inputs.surefire-files }}\" /></fileset>"        >> junit-reports-ant.xml
        echo "<report format=\"frames\" todir=\"${{ inputs.report-dir }}/junit-frames\" />"          >> junit-reports-ant.xml
        echo "<report format=\"noframes\" todir=\"${{ inputs.report-dir }}/junit-noframes\" />"      >> junit-reports-ant.xml
        echo "</junitreport>" >> junit-reports-ant.xml
        echo "<replace file=\"${{ inputs.report-dir }}/junit-noframes/junit-noframes.html\" token=\"Unit Test Results\" value=\"${{ inputs.report-title }}\" />"  >> junit-reports-ant.xml
        echo "<replace file=\"${{ inputs.report-dir }}/junit-frames/index.html\"            token=\"Unit Test Results\" value=\"${{ inputs.report-title }}\" />"  >> junit-reports-ant.xml
        echo "<replace file=\"${{ inputs.report-dir }}/junit-frames/overview-summary.html\" token=\"Unit Test Results\" value=\"${{ inputs.report-title }}\" />"  >> junit-reports-ant.xml
        echo "</target>" >> junit-reports-ant.xml
        echo "</project>" >> junit-reports-ant.xml

    - shell: bash
      run: |
        ant -file junit-reports-ant.xml
